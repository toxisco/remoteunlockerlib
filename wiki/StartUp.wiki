#summary How-To
#labels Featured,Phase-Deploy

<wiki:toc max_depth="4" />

= Introduction =

RemoteUnlocker is an Android developer tool with which you can implement a serial-codes control system in an easy and intuitive way.

The tool consists of an Android library to be imported in your projects and a simple backend, written in PHP + MySQL, that a developer (or whoever) can use to manage the serial-codes database.

== Installation ==

Before you start using the library requires a few simple steps:

 # copy the php backend on your web hosting service and install the database (setup.php)
 # import the library into your workspace (eg Eclipse)

==== Install PHP Backend ====

To install the backend is sufficient:

 # download the file *remoteunlocker{{{_php_}}}{{{<version>}}}.zip* (in _*Downloads*_ section) and extract the content in a local folder
 # open the file *lib/config.php* with your favorite text (or php) editor, edit HOST, USERNAME, PASSWORD, DATABASE and RU_PASSWORD fields and then save the file. _*Note* - RU_PASSWORD will be the access password for the admin backend._
 # copy all above files and folders to the choosen destination folder in your web hosting service. _*Note* - it is important to take a note of the path where you installed the backend (eg *_myweb.com/remoteunlocker_*) _
 # Run the script setup.php from the browser (eg _myweb.com/remoteunlocker/setup.php_)

A message will report the outcome of the transaction (database installed successfully or error during installation)

==== Install Android library ====

Da scrivere procedura di import della libreria

== Usage ==

Once the library and the backend has been installed properly, the tool usage is divided into:

  * Inclusion of serial numbers in the backend (_admin.php_)
  * Import the library into your Android project and use the RemoteUnlocker API

==== PHP Backend guide ====

The use of the php backend is very intuitive. Actually we just need to get started:

 # point your browser to the administrative script (eg _myweb.com/remoteunlocker/admin.php_)
 # just enter your password (_RU_PASSWORD_ in the _config.php_ file) in the (very thin, atm) login page

What is shown below is the actual backend consists of:

 * A field for entering serial keys
 * A table-style list with serial numbers previously entered and the ID/IMEI of the associated device (if already registered), as well as some control options (edit/delete serials or ID/IMEI)

==== Android Library Guide ====

see the API Developer's Guide